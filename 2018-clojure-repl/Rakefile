require 'slippery'

Slippery::RakeTasks.new do
  title "Clojure REPLs - Closing the Loop - Arne Brasseur"
  type :shower
  add_highlighting :tomorrow, '8.2'

  # shower
  js_options theme: :material, ratio: '16x10'
  #js_options theme: :material


  # reveal_js
  # js_options theme: 'sky', # beige default moon night serif simple sky solarized
  #            transition: 'none',
  #            backgroundTransition: 'none',
  #            width: 1500,  #1680,
  #            height: 1000,  #1050
  #            loop: true

  pack_assets

  transform 'head' do |head|
    H[:head, head.attributes, head.children + [
        H[:link, rel: 'stylesheet', type: 'text/css', href: 'https://unpkg.com/tachyons@4.9.1/css/tachyons.min.css'],
        H[:link, rel: 'stylesheet', type: 'text/css', href: 'tomorrow.css'],
        H[:link, rel: 'stylesheet', type: 'text/css', href: 'style.css'],
        #H[:link, href: 'https://fonts.googleapis.com/css?family=EB+Garamond', rel: 'stylesheet', type:'text/css'],
        H[:script, {type: 'text/javascript', src: "https://code.jquery.com/jquery-3.3.1.min.js"}]
        #H[:script, {type: 'text/javascript'}, File.read('ga.js')],
      ]
    ]
  end

  transform('body') do |body|
    body.add_child(H[:script, {type: 'text/javascript', src: 'shower-highlight.js'}])
  end

  # transform('body') do |body|
  #   body
  #     .set_children(body.children.drop(1))
  #     .add_child(H[:div, {id: "overlay"}, "@plexus"])
  # end

  # transform 'section[fullscreen-img]' do |section|
  #   section.attr('data-background', section.attr('fullscreen-img'))
  # end

  # transform '.fragments, .fragments ul' do |section|
  #   section.map_children do |ch|
  #     if ch.text? || ch.tag?(:h2) || ch.tag?(:ul)
  #       ch
  #     else
  #       ch.add_class('fragment')
  #     end
  #   end
  # end

  # transform '.hljs-attribute' do |attr|
  #   if %w[_links _controls _embedded].include?(attr.text.strip)
  #     H[:strong, attr]
  #   else
  #     attr
  #   end
  # end

  transform 'li' do |li|
    H[:li, li.children.first.children]
  end

  transform '.slide.repl' do |section|
    code=section.select('code').first.text.lines #.text.split(/^(?=\w+=>)/)
    code_blocks = []
    H[:div,
      code.flat_map do |c|
        code_blocks += [c]
        if code_blocks.length > 6
          code_blocks = code_blocks.drop(1)
        end
        section.replace('pre') do |pre|
          code_blocks.map.with_index do |line, idx|
            pre.replace('code') do |code|
              if idx == (code_blocks.length-1)
                H[:code, {class: "highlight"}, line]
              else
                H[:code, line]
              end
            end
          end
        end
      end
     ]
  end

  # transform 'pre.linum' do |pre|
  #   H[:pre, pre.text.lines.map{|l| H[:code, {class: "ruby"}, l]}]
  # end

end

task :default => 'slippery:build:index'
task :watch   => 'slippery:watch:index'
